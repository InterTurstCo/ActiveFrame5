<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<configuration xmlns="https://cm5.intertrust.ru/config">

    <!-- Статические группы пользователей - мы вынуждены объявлять их здесь, т.к. они используются в матрицах доступа -->
    <static-group name="test-group-1"/>

    <static-group name="Administrators_Read_Only" />

    <dynamic-group name="ManagementChain">
        <context>
            <domain-object type="Department" />
        </context>
        <members>
            <collector class-name="ru.intertrust.cm.test.acess.dynamicgroup.ManagementChain" />
        </members>
    </dynamic-group>

    <dynamic-group name="EmployeeBosses">
        <context>
            <domain-object type="Employee" />
        </context>
        <members>
            <collector class-name="ru.intertrust.cm.test.acess.dynamicgroup.EmployeeBosses" />
        </members>
    </dynamic-group>

    <dynamic-group name="Person1AndPerson2">
        <context>
            <domain-object type="Person" />
        </context>
        <members>
            <track-domain-objects>
                <get-person>
                    <query>select id from person where login in ('person1', 'person2')</query>
                </get-person>
            </track-domain-objects>
        </members>
    </dynamic-group>


    <context-role name="AllUsers">
        <context>
            <domain-object type="Person" />
        </context>
        <groups>
            <collector class-name="ru.intertrust.cm.test.acess.contextrole.AllUsers" />
        </groups>
    </context-role>

    <!-- Динамическая группа для тестов  -->
    <dynamic-group name="AllPersonsExceptPerson2">
        <members>
            <track-domain-objects type="Person">
                <get-person>
                    <query>select p.id from person p where p.login not in ('person2')</query>
                </get-person>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="AllPersonsExceptPerson1">
        <members>
            <track-domain-objects type="Person">
                <get-person>
                    <query>select p.id from person p where p.login not in ('person1')</query>
                </get-person>
            </track-domain-objects>
        </members>
    </dynamic-group>
    
    <dynamic-group name="test-group-2">
        <members>
            <track-domain-objects type="Person" status="Active">
                <get-person>
                    <query>select id from person where login = 'person3'</query>
                </get-person>
            </track-domain-objects>
        </members>
    </dynamic-group>
    
    <dynamic-group name="test_type_33_person_group">
        <context>
            <domain-object type="test_type_33">
                <filter>
                <![CDATA[
                getString('name').startsWith('context')
                ]]>
                </filter>
            </domain-object>
        </context>
        <members>
            <track-domain-objects>
                <get-person>
                    <doel>person</doel>
                </get-person>
            </track-domain-objects>
        </members>
    </dynamic-group>
    
    <dynamic-group name="PersonAndDelegates">
        <!-- По одной группе на каждый объект "Person" (пользователь) в системе -->
        <context>
            <domain-object type="Employee" />
        </context>
        <members>
            <!-- Отслеживаем сохранение/удаление объектов типа "Delegation" в статусе "active" -->
            <track-domain-objects type="Delegation">
                <!-- Указываем, какую именно группу (с каким контекстом) менять - берём пользователя из поля "person" -->
                <bind-context>
                    <doel>person</doel>
                </bind-context>
                <!-- Указываем, как получить пользователя, который войдёт в группу - берём его из поля "delegate" -->
                <get-person>
                    <doel>Delegation^person.delegate</doel>
                </get-person>
            </track-domain-objects>
            <track-domain-objects>
                <get-person>
                    <doel>id</doel>
                </get-person>
            </track-domain-objects>
        </members>
        <!-- Также включаем всех членов группы "Пользователь" с тем же контекстом -->
        <!-- include-group name="Пользователь" / -->
        <!-- Вероятно, по соображениям эффективности выгоднее будет не включать здесь группу "Пользователь", а повторить тег trackObjects из
            неё -->
    </dynamic-group>

    <dynamic-group name="DepartmentEmployees">
        <context>
            <domain-object type="Department" />
        </context>
        <members>
            <track-domain-objects type="Employee">
                <bind-context>
                    <doel>Department</doel>
                </bind-context>
                <get-group name="PersonAndDelegates">
                    <doel>Employee^Department</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="AgentPersons">
        <context>
            <domain-object type="agent_person" />
        </context>
        <members>
            <track-domain-objects type="agent_person">
                <get-person>
                    <doel>person</doel>
                </get-person>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="OrganizationEmployees">
        <context>
            <domain-object type="Organization" />
        </context>
        <members>
            <track-domain-objects type="Employee">
                <bind-context>
                    <doel>Department.Organization</doel>
                </bind-context>
                <get-group name="DepartmentEmployees">
                    <!-- doel>Department^Organization.Employee^Department</doel -->
                    <!-- Врепенное решение пока не починится DOEL -->
                    <doel>Department^Organization</doel>
                </get-group>
            </track-domain-objects>
            <track-domain-objects type="Department">
                <bind-context>
                    <doel>Organization</doel>
                </bind-context>
                <get-group name="DepartmentEmployees">
                    <!-- doel>Department^Organization.Employee^Department</doel -->
                    <!-- Врепенное решение пока не починится DOEL -->
                    <doel>Department^Organization</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>


    <dynamic-group name="EmployeeDepartmentEmployees">
        <!-- По одной группе на каждый объект "Employee" (сотрудник) в системе -->
        <context>
            <domain-object type="Employee" />
        </context>
        <members>
            <track-domain-objects>
                <get-group name="DepartmentEmployees">
                    <doel>Department</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="OrganizationBoss">
        <context>
            <domain-object type="Organization" />
        </context>
        <members>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>Boss</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="DepartmentBosses">
        <context>
            <domain-object type="Organization" />
        </context>
        <members>
            <track-domain-objects type="Department">
                <bind-context>
                    <doel>Organization</doel>
                </bind-context>
                <get-group name="PersonAndDelegates">
                    <doel>Department^Organization.Boss</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="DepartmentBoss">
        <context>
            <domain-object type="Department" />
        </context>
        <members>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>Boss</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <!-- Контекстные роли -->
    <context-role name="DocumentAuthor">
        <context>
            <domain-object type="Outgoing_Document" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>Author</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>

    <context-role name="Author">
        <context>
            <domain-object type="Internal_Document" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>docAuthor</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>
    
    <context-role name="AuthorBosses">
        <context>
            <domain-object type="Internal_Document" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="DepartmentBosses">
                    <doel>docAuthor.Department.Organization</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>

    <context-role name="Registrator">
        <context>
            <domain-object type="Internal_Document" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>Registrant</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>

    <context-role name="Negotiator">
        <context>
            <domain-object type="Internal_Document" />
        </context>
        <groups>
            <track-domain-objects type="Negotiation_Card">
                <bind-context>
                    <doel>Parent_Document</doel>
                </bind-context>
                <get-group name="PersonAndDelegates">
                    <doel>Negotiation_Card^Parent_Document.Negotiator</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>
    
	<context-role name="test_outgoing_author">
        <context>
            <domain-object type="test_outgoing_document" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>author</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>    

	<context-role name="test_outgoing_signer">
        <context>
            <domain-object type="test_outgoing_document" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>signer</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>    
    
    <context-role name="test4_employee">
        <context>
            <domain-object type="test_type_4" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="Person">
                    <doel>employee</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>

    <access-matrix type="test_outgoing_document">
        <status name="Active">
            <read>
                <permit-role name="test_outgoing_author" />
                <permit-role name="test_outgoing_signer" />
            </read>
            <write>
                <permit-role name="test_outgoing_author" />
                <permit-role name="test_outgoing_signer" />
            </write>
            <delete>
                <permit-role name="test_outgoing_author" />
                <permit-role name="test_outgoing_signer" />
            </delete>
        </status>
    </access-matrix>

    <access-matrix type="test_resolution" matrix-reference-field="document"/>

    <access-matrix type="department_test">
        <create>
            <permit-group name="AllPersons" />
        </create>            
        <status name="Active">
            <read>
                <permit-group name="AllPersons" />
            </read>
            <write>
                <permit-group name="AllPersons" />
            </write>
            <delete>
                <permit-group name="AllPersons" />
            </delete>

            <execute-action name="action1">
                <permit-group name="AllPersons" />
            </execute-action>            
        </status>
    </access-matrix>

    <access-matrix type="department_test2">
        <status name="Active">
            <read>
                <permit-group name="AllPersons" />
            </read>
            <write>
                <permit-group name="AllPersons" />
            </write>
            <delete>
                <permit-group name="AllPersons" />
            </delete>

            <execute-action name="action1">
                <permit-group name="AllPersons" />
            </execute-action>            
        </status>
    </access-matrix>
    

    <access-matrix type="organization_test">
         <create>
            <permit-group name="AllPersons" />
        </create>        
        <status name="Active">
            <read>
                <permit-group name="AllPersons" />
            </read>
            <create-child type="department_test">
                <permit-group name="AllPersons" />
            </create-child>            
        </status>
    </access-matrix>

    <access-matrix type="city_test">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Active">
            <read>
                <permit-group name="AllPersonsExceptPerson2" />
            </read>
            <write>
                <permit-group name="AllPersonsExceptPerson2" />
            </write>
            <delete>
                <permit-group name="AllPersonsExceptPerson2" />
            </delete>

            <execute-action name="action1">
                <permit-group name="AllPersonsExceptPerson2" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="friend_city_test" matrix-reference-field="city"/>

    <access-matrix type="country_test">
        <create>
            <permit-group name="AllPersons" />
        </create>        
        <status name="Active">
            <read>
                <permit-group name="AllPersons" />
            </read>
            <create-child type="city_test">
                <permit-group name="AllPersonsExceptPerson2" />
            </create-child>            
        </status>
    </access-matrix>

    <access-matrix type="test_DO_No_Permissions">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Active">
            <read>
                <permit-group name="AllPersonsExceptPerson1" />
            </read>
            <write>
                <permit-group name="AllPersonsExceptPerson1" />
            </write>
            <delete>
                <permit-group name="AllPersonsExceptPerson1" />
            </delete>

            <execute-action name="action1">
                <permit-group name="AllPersonsExceptPerson1" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="test_DO_2" matrix-reference-field="ref_DO_1" />

    <access-matrix type="test_DO_3" read-everybody="false" matrix-reference-field="ref_DO_3_1" />

    <access-matrix type="ref_DO_3_1" read-everybody="false" matrix-reference-field="ref_DO_3_2" />

    <access-matrix type="ref_DO_3_2" read-everybody="true" />
    
    <access-matrix type="ref_DO_1" matrix-reference-field="ref_DO_2" />
    
    <access-matrix type="ref_DO_2" matrix-reference-field="ref_DO_3" />

    <access-matrix type="ref_DO_3" read-everybody="true" />
    
    <access-matrix type="employee_test" matrix-reference-field="Department" borrow-permissisons="all" />
    
    <access-matrix type="employee_test_ref_matrix" matrix-reference-field="Department" />
    
    <access-matrix type="test_type_1" read-everybody="true" />

    <access-matrix type="test_type_2" matrix-reference-field="test_type_1" />

    <access-matrix type="test_type_4" read-everybody="true" />

    <access-matrix type="test_type_5" read-everybody="true" />

    <access-matrix type="test_type_7">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <read>
                <permit-group name="AllPersons" />
            </read>
            <create-child type="test_type_8">
                <permit-group name="AllPersons" />
            </create-child>
            <execute-action name="test-action-for-test-7">
                <permit-group name="AllPersons" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="test_type_8" matrix-reference-field="test_type_7">
        <matrix-reference-mapping>
            <permission map-from="read" map-to="write" />
            <permission map-from="read" map-to="delete" />
            <permission map-from="write" map-to="write" />
            <permission map-from="write" map-to="delete" />
            <permission map-from="delete" map-to="delete" />
            <permission map-from="execute:test-action-for-test-7" map-to="execute:test-action-for-test-8" />
            <permission map-from="read" map-to="create-child:test_type_9" />
        </matrix-reference-mapping>
    </access-matrix>
    
    <access-matrix type="test_type_9" matrix-reference-field="test_type_8">
        <matrix-reference-mapping>
            <permission map-from="read" map-to="read" />
        </matrix-reference-mapping>
    </access-matrix>

	<access-matrix type="digital_signature" read-everybody="true">
		<create>
			<permit-group name="AllPersons" />
		</create>
	</access-matrix>
    
    <access-matrix type="test_type_11">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Active">
            <read>
                <permit-group name="AllPersons" />
            </read>
            <write>
                <permit-group name="AllPersons" />
            </write>
        </status>   
        <status name="Complete">
            <read>
                <permit-group name="AllPersons" />
            </read>
        </status>   
    </access-matrix>    

    <access-matrix type="test_type_13">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <read>
                <permit-group name="AllPersons" />
            </read>
            <write>
                <permit-group name="AllPersons" />
            </write>
        </status>
    </access-matrix>

    <access-matrix type="test_type_14">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <read>
                <permit-group name="AllPersons" />
            </read>
            <write>
                <permit-group name="AllPersons" />
            </write>
        </status>
    </access-matrix>

    <access-matrix type="test_type_17" read-everybody="true">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <write>
                <permit-group name="AllPersons" />
            </write>
            <delete>
                <permit-group name="AllPersons" />
            </delete>    
        </status>
    </access-matrix>
    <access-matrix type="test_type_18" matrix-reference-field="test_type_17"/>

    <context-role name="test_type_21_author">
        <context>
            <domain-object type="test_type_21"/>
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="Person">
                    <doel>author</doel>
                </get-group>
            </track-domain-objects>
        </groups>
        
    </context-role>
    
    <access-matrix type="test_type_21">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <read>
                <permit-role name="test_type_21_author" />
            </read>
            <write>
                <permit-group name="AllPersons" />
            </write>
            <delete>
                <permit-group name="AllPersons" />
            </delete>    
        </status>
    </access-matrix>

    <access-matrix type="test_type_23" matrix-reference-field="test_type_14" borrow-permissisons="read">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <write>
                <permit-role name="test_type_23_author" />
            </write>
            <delete>
                <permit-role name="test_type_23_author" />
            </delete>
            <execute-action name="test_action_permission">
                <permit-role name="test_type_23_author" />
            </execute-action>    
        </status>
    </access-matrix>
    
    <context-role name="test_type_23_author">
        <context>
            <domain-object type="test_type_23"/>
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="Person">
                    <doel>author</doel>
                </get-group>
            </track-domain-objects>
        </groups>
        
    </context-role>    

    <access-matrix type="test_type_24">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <read>
                 <permit-role name="test_type_24_author" />
            </read>
            <write>
                <permit-role name="test_type_24_author" />
            </write>
            <delete>
                <permit-role name="test_type_24_author" />
            </delete>
            <create-child type="test_type_25">
                <permit-role name="test_type_24_author" />
            </create-child>
            <create-child type="test_type_28">
                <permit-role name="test_type_24_author" />
            </create-child>
        </status>
    </access-matrix>

    <context-role name="test_type_24_author">
        <context>
            <domain-object type="test_type_24"/>
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="Person">
                    <doel>author</doel>
                </get-group>
            </track-domain-objects>
        </groups>
        
    </context-role>

    <access-matrix type="test_type_29">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <read>
                 <permit-role name="test_type_29_author" />
            </read>
            <write>
                <permit-role name="test_type_29_author" />
            </write>
            <create-child type="test_type_30">
                <permit-role name="test_type_29_author" />
            </create-child>
        </status>
    </access-matrix>

    <access-matrix type="test_type_30">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <read>
                 <permit-group name="AllPersons" />
            </read>
            <write>
                <permit-group name="AllPersons" />
            </write>
            <delete>
                <permit-group name="AllPersons" />
            </delete>
        </status>
    </access-matrix>

    <access-matrix type="test_type_34">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <read>
                 <permit-group name="AllPersons" />
            </read>
            <write>
                <permit-group name="AllPersons" />
            </write>
            <delete>
                <permit-group name="AllPersons" />
            </delete>
        </status>
    </access-matrix>

    <access-matrix type="test_type_35" matrix-reference-field="test_type_34" borrow-permissisons="readWriteDelete">
        <create>
            <permit-group name="Person1AndPerson2" />
        </create>
    </access-matrix>

    <context-role name="test_type_29_author">
        <context>
            <domain-object type="test_type_29"/>
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="Person">
                    <doel>author</doel>
                </get-group>
            </track-domain-objects>
        </groups>
        
    </context-role>

    <access-matrix type="letter">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <read>
                <permit-group name="Administrators" />
                <permit-group name="Administrators_Read_Only" />
            </read>
            <write>
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-group name="Administrators" />
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="country">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Active">
            <read>
                <permit-group name="Administrators" />
                <permit-group name="Administrators_Read_Only" />
            </read>
            <write>
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-group name="Administrators" />
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="country_union">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Active">
            <read>
                <permit-group name="Administrators" />
                <permit-group name="Administrators_Read_Only" />
            </read>
            <write>
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-group name="Administrators" />
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="city" read-everybody="true">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <!--status name="*"> <read permit-everybody="true"> </read> </status -->
        <status name="Active">
            <!--read> <permit-group name="AllPersons" /> </read -->
            <write>
                <permit-group name="AllPersons" />
            </write>
            <delete>
                <permit-group name="AllPersons" />
            </delete>
            <execute-action name="action1">
                <permit-group name="AllPersons" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="country_attachment">
        <create>
            <permit-group name="Administrators" />
            <permit-group name="test-group-1" />
        </create>
        <status name="*">
            <read>
                <permit-group name="Administrators" />
                <permit-group name="Administrators_Read_Only" />
            </read>
            <write>
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-group name="Administrators" />
            </delete>
        </status>

    </access-matrix>

    <access-matrix type="Outgoing_Document">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Draft">
            <read>
                <permit-role name="DocumentAuthor" />
            </read>
            <write>
                <permit-role name="DocumentAuthor" />
            </write>
            <delete>
                <permit-role name="DocumentAuthor" />
            </delete>
            <create-child type="Employee">
                <permit-role name="DocumentAuthor" />
            </create-child>
            <execute-action name="action1">
                <permit-role name="DocumentAuthor" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="Employee" read-everybody="true">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Active">

            <!-- На чтение есть права у родителя read-everybody
            <read>
                <permit-group name="Administrators" />
                <permit-group name="Administrators_Read_Only" />
            </read-->
            <write>
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-group name="Administrators" />
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" />
            </execute-action>
        </status>
    </access-matrix>


    <access-matrix type="Department" read-everybody="true">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Active">

            <write>
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-group name="Administrators" />
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="Organization">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Active">
            <read>
                <permit-group name="Administrators" />
                <permit-group name="Administrators_Read_Only" />
            </read>
            <write>
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-group name="Administrators" />
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" />
            </execute-action>
        </status>
    </access-matrix>

    <!-- Внутренний документ -->
    <access-matrix type="Internal_Document">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Draft">
            <read>
                <permit-role name="Author" />
                <permit-group name="Administrators" />
                <permit-role name="Registrator" />
            </read>
            <write>
                <permit-role name="Author" />
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-role name="Author" />
                <permit-group name="Administrators" />
            </delete>
            <execute-action name="StartProcessAction">
                <permit-role name="Author" />
            </execute-action>
            <execute-action name="ChangeStatusAction">
                <permit-role name="Author" />
            </execute-action>
            <execute-action name="start-internal-document-process">
                <permit-role name="Author" />
            </execute-action>            
        </status>
        <status name="Negotiation">
            <read>
                <permit-role name="Author" />
                <permit-group name="Administrators" />
                <permit-role name="Registrator" />
                <permit-role name="Negotiator" />                
            </read>
            <write>
                <permit-role name="Author" />
            </write>
        </status>
        <status name="Registration">
            <read>
                <permit-role name="Author" />
                <permit-group name="Administrators" />
                <permit-role name="Registrator" />
            </read>
            <write>
                <permit-role name="Author" />
                <permit-role name="Registrator" />
            </write>
        </status>
        <status name="Registred">
            <read>
                <permit-group name="AllPersons" />
            </read>
            <delete>
                <permit-role name="Author" />
            </delete>
        </status>
        <status name="OnRevision">
            <read>
                <permit-role name="Author" />
                <permit-group name="Administrators" />
                <permit-role name="Registrator" />
            </read>
            <write>
                <permit-role name="Author" />
            </write>
        </status>
    </access-matrix>

    <!-- Карточка согласования. Наследует права у родительского документа -->
    <access-matrix type="Negotiation_Card" matrix-reference-field="Parent_Document" />

    <access-matrix type="Examine_Card" >
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="Resolution_Card" >
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>
    
    <access-matrix type="Assignment">
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>
    
    <access-matrix type="org_middle">
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="Tst_Employee">
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="Delegation">
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <!-- Переопределенная матрица person_alt_uids -->
    <access-matrix type="person_alt_uids" read-everybody="true" extend-type="replace">
        <create>
            <permit-group name="AllPersons"/>
        </create>
        <status name="*">
            <write>
                <permit-group name="AllPersons"/>
            </write>
            <delete>
                <permit-group name="AllPersons"/>
            </delete>
        </status>
    </access-matrix>
</configuration>