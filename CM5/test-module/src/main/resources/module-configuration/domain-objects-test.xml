<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<configuration xmlns="https://cm5.intertrust.ru/config">

     <domain-object-type name="organization_test" audit-log="true" initial-status="Active">
        <fields>
            <string name="Name" length="128" not-null="true" />
            <reference name="Boss" type="employee_test"/>
        </fields>
    </domain-object-type>

    <domain-object-type name="department_test" audit-log="true" initial-status="Active">
        <fields>
            <string name="Name" length="128" not-null="true" />
            <long name="Number1" not-null="false" />            
            <long name="Number2" not-null="false" />
            <date-time name="Date1" not-null="false" />            
            <date-time name="Date2" not-null="false" />            
            <reference name="Organization" type="organization_test" not-null="true"/>
            <reference name="Boss" type="employee_test"/>
            <reference name="ParentDepartment" type="department_test" not-null="false"/>
            <string name="Description" length="512" not-null="false" />
        </fields>
    </domain-object-type>

    <search-area name="Внутренние документы 2">
        <target-domain-object type="Internal_Document">
            <indexed-field name="RegNum" />
            <indexed-field name="Name" />
            <indexed-field name="Description" />
            <indexed-field name="Author">
                <doel>docAuthor</doel>
            </indexed-field>
            <indexed-field name="Author_Name">
                <doel>docAuthor.Name</doel>
            </indexed-field>
            <indexed-field name="Full_Description">
                <script>ctx.get('Name') + ctx.get('Description') + ctx.get('Author')</script>
            </indexed-field>
            <target-collection name="Internal_Document" />
            <filter>
                <conditions-script>ctx.get('Name') == 'Department'</conditions-script>
            </filter>
        </target-domain-object>
    </search-area>
    
    <domain-object-type name="person_test" initial-status="Active3">
        <fields>
            <string name="Login" length="128" />
            <string name="FirstName" length="128" />
            <string name="LastName" length="128" />
            <string name="EMail" length="128" />
        </fields>
        <uniqueKey> <!-- This key means automatic key + index creation -->
            <field name="Login"/>
        </uniqueKey>
        <uniqueKey> <!-- This key means automatic key + index creation -->
            <field name="EMail"/>
        </uniqueKey>
        <attachment-types>
            <attachment-type name="person_attachment_test"></attachment-type>
        </attachment-types>
    </domain-object-type>
    
    <domain-object-type name="employee_test" extends="person_test" audit-log="true" initial-status="Active">
        <fields>
            <reference name="Department" type="department_test" not-null="true"/>
            <string name="Name" length="64" not-null="true" />
            <string name="Position" length="64" not-null="true" />
            <string name="Phone" length="32" />
            <string name="Certificate" length="4000" />
            <string name="Fingerprint" length="128" />
        </fields>
        <uniqueKey> <!-- This key means automatic key + index creation -->
            <field name="Phone" />
        </uniqueKey>
    </domain-object-type>
    
    <domain-object-type name="country_test" initial-status="Active">
        <fields>
            <string name="name" length="128"/>
            <date-time name="independence_day"/>
            <long name="population"/>
            <boolean name="is_country_rich"/>
            <decimal name="square" precision="15" scale="2"/>
            <reference name="capital" type="city_test"/>
            <reference name="most_famous_city" type="city_test"/>
            <string name="description" length="1024"/>
        </fields>
        <uniqueKey>
            <field name="name"/>
        </uniqueKey>
        <attachment-types>
            <attachment-type name="country_attachment_test"/>
        </attachment-types>
    </domain-object-type>
    
     <domain-object-type name="city_test" initial-status="Active">
        <fields>
            <reference name="country" type="country_test"/>
            <string name="name" length="128"/>
            <long name="population"/>
            <long name="year_of_foundation"/>
            <decimal name="latitude" precision="9" scale="2"/>
            <decimal name="longitude" precision="9" scale="2"/>
            <decimal name="square" precision="9" scale="2"/>
        </fields> 
    </domain-object-type>

    <domain-object-type name="test_type_1" initial-status="Active">
        <fields>
            <string name="name" length="128" />
        </fields>
    </domain-object-type>

    <domain-object-type name="test_type_2" initial-status="Active">
        <fields>
            <reference name="test_type_1" type="test_type_1"/>
            <string name="name" length="128" />
        </fields>
    </domain-object-type>

    
    <collection name="Employees_test" idField="id">
        <prototype>
            <![CDATA[                                    
    select
        e.id, e.name, e.position, department, department_type
        from                    
                    (select
                    e.id, e.name, e.position,
                    
                    CASE WHEN e.department IS NOT NULL THEN e.department
                            ELSE e.department
                            END AS department,
        
                    CASE WHEN e.department IS NOT NULL THEN e.department_type
                            ELSE e.department_type
                            END AS department_type        
                from
                    Employee e) e
                    ::from-clause
                where
                    1=1 ::where-clause
                    
            ]]>
        </prototype>

        <!-- если запрос-счётчик отсутствует, то в select подставляется count(*) 
            вместо названий колонок -->
        <counting-prototype>
            select count(*) from Employee e
            ::from-clause WHERE 1=1 ::where-clause
        </counting-prototype>

        <filter name="byDepartment">
            <!-- по умолчанию and, если перед условием нет других (только
                ключ. слово where), то условие опускаем -->
            <!-- {0} - это параметр фильтра, у одного фильтра может быть 
                несколько параметров -->
            <criteria placeholder="where-clause">
                <![CDATA[
                    e.department = {0}
                ]]>
            </criteria>
        </filter>

        <filter name="byDepartmentNames">
            <reference placeholder="from-clause">
                 <![CDATA[
                    inner join department d on e.department = d.id
                ]]>
            </reference>

            <!-- по умолчанию and, если перед условием нет других (только ключ. слово where), то условие опускаем -->
            <!-- {0} - это параметр фильтра, у одного фильтра может быть несколько параметров -->
            <criteria placeholder="where-clause">
                <![CDATA[
                    d.name in ({0})
                ]]>
            </criteria>
        </filter>
        
        <filter name="byName">
            <criteria placeholder="where-clause">
                <![CDATA[
                    e.name = {0}
                ]]>
            </criteria>
        </filter>
        <filter name="byFirstLetter">
            <criteria placeholder="where-clause">
                <![CDATA[
                    e.name like {0} || '%'
                ]]>
            </criteria>
        </filter>
        <filter name="byNameAndPosition">
            <criteria placeholder="where-clause">
                <![CDATA[
                    e.name || e.position like {0}
                ]]>
            </criteria>
        </filter>
    </collection>  
</configuration>