<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>client</artifactId>
        <groupId>ru.intertrust.cm-sochi</groupId>
        <version>1.0.1-5</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>rest-client</artifactId>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <swagger-annotations-version>1.5.22</swagger-annotations-version>
        <spring-web-version>4.3.9.RELEASE</spring-web-version>
        <jackson-version>2.10.1</jackson-version>
        <jackson-databind-version>2.10.1</jackson-databind-version>
        <jackson-databind-nullable-version>0.2.1</jackson-databind-nullable-version>
        <jackson-threetenbp-version>2.9.10</jackson-threetenbp-version>
        <maven-plugin-version>1.0.0</maven-plugin-version>
        <junit-version>4.13</junit-version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator</artifactId>
            <version>${openapi.generator.version}</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.3.1</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>logging-interceptor</artifactId>
            <version>4.3.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.6</version>
        </dependency>
        <dependency>
            <groupId>io.gsonfire</groupId>
            <artifactId>gson-fire</artifactId>
            <version>1.8.3</version>
        </dependency>

        <!-- Эта зависимость нужна чтоб клиент собрался после ws-server, откуда потом возмем swagger.json -->
        <dependency>
            <groupId>ru.intertrust.cm-sochi</groupId>
            <artifactId>rest-server</artifactId>
            <scope>provided</scope>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/../../Core/rest-server/target/swagger/swagger.json</inputSpec>
                            <generatorName>java</generatorName>
                            <!--library>resttemplate</library-->

                            <output>${project.build.directory}/generated-sources/remote-openapi</output>
                            <apiPackage>ru.intertrust.cm.core.restclient.api</apiPackage>
                            <modelPackage>ru.intertrust.cm.core.restclient.model</modelPackage>
                            <invokerPackage>ru.intertrust.cm.core.restclient.client</invokerPackage>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
							<includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>            
			
        </plugins>
    </build>
</project>


