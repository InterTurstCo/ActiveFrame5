<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13.20151117">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Конфигурация" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1434362147000</longProp>
        <longProp name="ThreadGroup.end_time">1434362147000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Конфигурация скрипта" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="THREAD_COUNT" elementType="Argument">
              <stringProp name="Argument.name">THREAD_COUNT</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.desc">Количество потоков</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="RUMP_UP_PERIOD" elementType="Argument">
              <stringProp name="Argument.name">RUMP_UP_PERIOD</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.desc">Время запуска потоков</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ITERATION_COUNT" elementType="Argument">
              <stringProp name="Argument.name">ITERATION_COUNT</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.desc">Количество итераций</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="HOST" elementType="Argument">
              <stringProp name="Argument.name">HOST</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.desc">Сервер</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="PORT" elementType="Argument">
              <stringProp name="Argument.name">PORT</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.desc">Порт</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Системные переменные" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="BASE_DIR" elementType="Argument">
              <stringProp name="Argument.name">BASE_DIR</stringProp>
              <stringProp name="Argument.value">${__BeanShell(import org.apache.jmeter.services.FileServer; FileServer.getFileServer().getBaseDir();)}${__BeanShell(File.separator,)}</stringProp>
              <stringProp name="Argument.desc">Директория скрипта</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="STORE_REAL_REQUEST" elementType="Argument">
              <stringProp name="Argument.name">STORE_REAL_REQUEST</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.desc">Включение логирования каждого запроса на сервер в файл jmeter-gwt-rpc.log</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="POLICY-2" elementType="Argument">
              <stringProp name="Argument.name">POLICY-2</stringProp>
              <stringProp name="Argument.value">F6D898BA9550D61162566FE512826C45</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="POLICY-1" elementType="Argument">
              <stringProp name="Argument.name">POLICY-1</stringProp>
              <stringProp name="Argument.value">9D1E8F76238CE75DC91A4E5835D5B56A</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Основной поток" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATION_COUNT}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREAD_COUNT}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RUMP_UP_PERIOD}</stringProp>
        <longProp name="ThreadGroup.start_time">1434362304000</longProp>
        <longProp name="ThreadGroup.end_time">1434362304000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="X-GWT-Permutation" elementType="Header">
              <stringProp name="Header.name">X-GWT-Permutation</stringProp>
              <stringProp name="Header.value">CD5A17F96A8864AF8C44BA43EA37236F</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Работа клиента" enabled="true"/>
        <hashTree>
          <ru.intertrust.performance.jmetertools.GwtRpcSampler guiclass="ru.intertrust.performance.jmetertools.GwtRpcHttpTestSampleGui" testclass="ru.intertrust.performance.jmetertools.GwtRpcSampler" testname="0-ru.intertrust.cm.core.gui.rpc.api.BusinessUniverseAuthenticationService.login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">7|0|7|http://localhost:8090/cm-sochi/ru.intertrust.cm.core.gui.impl.LoginPage/|9D1E8F76238CE75DC91A4E5835D5B56A|ru.intertrust.cm.core.gui.rpc.api.BusinessUniverseAuthenticationService|login|ru.intertrust.cm.core.business.api.dto.UserCredentials|ru.intertrust.cm.core.business.api.dto.UserUidWithPassword/2142978794|admin|1|2|3|4|1|5|6|0|7|7|</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="HTTPSampler.path">/cm-sochi/remote/BusinessUniverseAuthenticationService</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="GwtRpcRequestJson">ew0KICAiQHR5cGUiOiJydS5pbnRlcnRydXN0LnBlcmZvcm1hbmNlLmptZXRlcnRvb2xzLlJlcXVlc3RWaWV3ZXIiLA0KICAibW9kdWxlQmFzZVVybCI6Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9jbS1zb2NoaS9ydS5pbnRlcnRydXN0LmNtLmNvcmUuZ3VpLmltcGwuTG9naW5QYWdlLyIsDQogICJwb2xpY3lOYW1lQWxpYXMiOiIxIiwNCiAgInNlcnZpY2UiOiJydS5pbnRlcnRydXN0LmNtLmNvcmUuZ3VpLnJwYy5hcGkuQnVzaW5lc3NVbml2ZXJzZUF1dGhlbnRpY2F0aW9uU2VydmljZSIsDQogICJtZXRob2QiOiJsb2dpbiIsDQogICJwYXJhbWV0ZXJzIjpbDQogICAgew0KICAgICAgIkB0eXBlIjoicnUuaW50ZXJ0cnVzdC5jbS5jb3JlLmJ1c2luZXNzLmFwaS5kdG8uVXNlclVpZFdpdGhQYXNzd29yZCIsDQogICAgICAidXNlclVpZCI6ImFkbWluIiwNCiAgICAgICJwYXNzd29yZCI6ImFkbWluIiwNCiAgICAgICJjbGllbnRUaW1lWm9uZSI6bnVsbA0KICAgIH0NCiAgXSwNCiAgInBhcmFtZXRlclR5cGVzIjpbDQogICAgInJ1LmludGVydHJ1c3QuY20uY29yZS5idXNpbmVzcy5hcGkuZHRvLlVzZXJDcmVkZW50aWFscyINCiAgXQ0KfQ==</stringProp>
            <stringProp name="GwtRpcResponceJson">bnVsbA==</stringProp>
          </ru.intertrust.performance.jmetertools.GwtRpcSampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Формирование запроса" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import ru.intertrust.performance.jmetertools.*;
try{
	//Змена ID и доменных объектов
	GwtUtil.preRequestProcessing(ctx);
	//-----  Пользовательский код   ----------------------------
	
	//----------------------------------------------------------
}catch(Exception ex){
	log.error(&quot;Pre request error in sampler &quot; + sampler.getName(), ex);
	sampler.setError(true);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Анализ результата" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import ru.intertrust.performance.jmetertools.*;
try{
	//Проверка на ошибки
	if (GwtUtil.isError(ctx)){
		prev.setSuccessful(false);
	}else{
		//Сохранение ID и доменных объектов
		GwtUtil.postResponseProcessing(ctx);
		//-----  Пользовательский код   ----------------------------
		
		//----------------------------------------------------------
	}
}catch(Exception ex){
	prev.setSuccessful(false);
	log.error(&quot;Post request error in sampler &quot; + ctx.getCurrentSampler().getName(), ex);
}
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <ru.intertrust.performance.jmetertools.GwtRpcSampler guiclass="ru.intertrust.performance.jmetertools.GwtRpcHttpTestSampleGui" testclass="ru.intertrust.performance.jmetertools.GwtRpcSampler" testname="1-ru.intertrust.cm.core.gui.rpc.api.BusinessUniverseService.getBusinessUniverseInitialization" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">7|0|8|http://localhost:8090/cm-sochi/ru.intertrust.cm.core.gui.impl.BusinessUniverseEntryPoint/|F6D898BA9550D61162566FE512826C45|ru.intertrust.cm.core.gui.rpc.api.BusinessUniverseService|getBusinessUniverseInitialization|ru.intertrust.cm.core.gui.model.Client|ru.intertrust.cm.core.gui.model.Browser/2441220581|Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.111 Safari/537.36|GMT+03:00|1|2|3|4|1|5|6|7|8|</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="HTTPSampler.path">/cm-sochi/remote/BusinessUniverseService</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="GwtRpcRequestJson">ew0KICAiQHR5cGUiOiJydS5pbnRlcnRydXN0LnBlcmZvcm1hbmNlLmptZXRlcnRvb2xzLlJlcXVlc3RWaWV3ZXIiLA0KICAibW9kdWxlQmFzZVVybCI6Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9jbS1zb2NoaS9ydS5pbnRlcnRydXN0LmNtLmNvcmUuZ3VpLmltcGwuQnVzaW5lc3NVbml2ZXJzZUVudHJ5UG9pbnQvIiwNCiAgInBvbGljeU5hbWVBbGlhcyI6IjIiLA0KICAic2VydmljZSI6InJ1LmludGVydHJ1c3QuY20uY29yZS5ndWkucnBjLmFwaS5CdXNpbmVzc1VuaXZlcnNlU2VydmljZSIsDQogICJtZXRob2QiOiJnZXRCdXNpbmVzc1VuaXZlcnNlSW5pdGlhbGl6YXRpb24iLA0KICAicGFyYW1ldGVycyI6Ww0KICAgIHsNCiAgICAgICJAdHlwZSI6InJ1LmludGVydHJ1c3QuY20uY29yZS5ndWkubW9kZWwuQnJvd3NlciIsDQogICAgICAiZGVzY3JpcHRvciI6Ik1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80Ny4wLjI1MjYuMTExIFNhZmFyaS81MzcuMzYiLA0KICAgICAgInRpbWVab25lSWQiOiJHTVQrMDM6MDAiDQogICAgfQ0KICBdLA0KICAicGFyYW1ldGVyVHlwZXMiOlsNCiAgICAicnUuaW50ZXJ0cnVzdC5jbS5jb3JlLmd1aS5tb2RlbC5DbGllbnQiDQogIF0NCn0=</stringProp>
            <stringProp name="GwtRpcResponceJson"></stringProp>
          </ru.intertrust.performance.jmetertools.GwtRpcSampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Формирование запроса" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import ru.intertrust.performance.jmetertools.*;
try{
	//Змена ID и доменных объектов
	GwtUtil.preRequestProcessing(ctx);
	//-----  Пользовательский код   ----------------------------
	
	//----------------------------------------------------------
}catch(Exception ex){
	log.error(&quot;Pre request error in sampler &quot; + sampler.getName(), ex);
	sampler.setError(true);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Анализ результата" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import ru.intertrust.performance.jmetertools.*;
try{
	//Проверка на ошибки
	if (GwtUtil.isError(ctx)){
		prev.setSuccessful(false);
	}else{
		//Сохранение ID и доменных объектов
		GwtUtil.postResponseProcessing(ctx);
		//-----  Пользовательский код   ----------------------------
		
		//----------------------------------------------------------
	}
}catch(Exception ex){
	prev.setSuccessful(false);
	log.error(&quot;Post request error in sampler &quot; + ctx.getCurrentSampler().getName(), ex);
}
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="ru.intertrust.performance.jmetertools.HttpUploadSampleGui" testclass="HTTPSamplerProxy" testname="20-Upload file: test.bmp" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cm-sochi/attachment-upload</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="${BASE_DIR}60-meg.doc" elementType="HTTPFileArg">
                  <stringProp name="File.path">${BASE_DIR}60-meg.doc</stringProp>
                  <stringProp name="File.paramname">fileUpload</stringProp>
                  <stringProp name="File.mimetype">image/bmp</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="GwtRpcRequestJson"></stringProp>
            <stringProp name="GwtRpcResponceJson">20457220988052-_-test.bmp,</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Формирование запроса" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import ru.intertrust.performance.jmetertools.*;
try{
	//-----  Пользовательский код   ----------------------------
	
	//----------------------------------------------------------
}catch(Exception ex){
	log.error(&quot;Pre request error in sampler &quot; + sampler.getName(), ex);
	sampler.setError(true);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Анализ результата" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import ru.intertrust.performance.jmetertools.*;
try{
	//Проверка на ошибки
	if (GwtUtil.isError(ctx)){
		prev.setSuccessful(false);
	}else{
		//Сохранение имени вложения
		GwtUtil.storeUploadResult(ctx);
		//-----  Пользовательский код   ----------------------------
		
		//----------------------------------------------------------
	}
}catch(Exception ex){
	prev.setSuccessful(false);
	log.error(&quot;Post request error in sampler &quot; + ctx.getCurrentSampler().getName(), ex);
}
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <ru.intertrust.performance.jmetertools.GwtRpcSampler guiclass="ru.intertrust.performance.jmetertools.GwtRpcHttpTestSampleGui" testclass="ru.intertrust.performance.jmetertools.GwtRpcSampler" testname="35-ru.intertrust.cm.core.gui.rpc.api.BusinessUniverseAuthenticationService.logout" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">7|0|4|http://localhost:8090/cm-sochi/ru.intertrust.cm.core.gui.impl.BusinessUniverseEntryPoint/|9D1E8F76238CE75DC91A4E5835D5B56A|ru.intertrust.cm.core.gui.rpc.api.BusinessUniverseAuthenticationService|logout|1|2|3|4|0|</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="HTTPSampler.path">/cm-sochi/remote/BusinessUniverseAuthenticationService</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="GwtRpcRequestJson">ew0KICAiQHR5cGUiOiJydS5pbnRlcnRydXN0LnBlcmZvcm1hbmNlLmptZXRlcnRvb2xzLlJlcXVlc3RWaWV3ZXIiLA0KICAibW9kdWxlQmFzZVVybCI6Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9jbS1zb2NoaS9ydS5pbnRlcnRydXN0LmNtLmNvcmUuZ3VpLmltcGwuQnVzaW5lc3NVbml2ZXJzZUVudHJ5UG9pbnQvIiwNCiAgInBvbGljeU5hbWVBbGlhcyI6IjEiLA0KICAic2VydmljZSI6InJ1LmludGVydHJ1c3QuY20uY29yZS5ndWkucnBjLmFwaS5CdXNpbmVzc1VuaXZlcnNlQXV0aGVudGljYXRpb25TZXJ2aWNlIiwNCiAgIm1ldGhvZCI6ImxvZ291dCIsDQogICJwYXJhbWV0ZXJzIjpbXSwNCiAgInBhcmFtZXRlclR5cGVzIjpbXQ0KfQ==</stringProp>
            <stringProp name="GwtRpcResponceJson">bnVsbA==</stringProp>
          </ru.intertrust.performance.jmetertools.GwtRpcSampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Формирование запроса" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import ru.intertrust.performance.jmetertools.*;
try{
	//Змена ID и доменных объектов
	GwtUtil.preRequestProcessing(ctx);
	//-----  Пользовательский код   ----------------------------
	
	//----------------------------------------------------------
}catch(Exception ex){
	log.error(&quot;Pre request error in sampler &quot; + sampler.getName(), ex);
	sampler.setError(true);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Анализ результата" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import ru.intertrust.performance.jmetertools.*;
try{
	//Проверка на ошибки
	if (GwtUtil.isError(ctx)){
		prev.setSuccessful(false);
	}else{
		//Сохранение ID и доменных объектов
		GwtUtil.postResponseProcessing(ctx);
		//-----  Пользовательский код   ----------------------------
		
		//----------------------------------------------------------
	}
}catch(Exception ex){
	prev.setSuccessful(false);
	log.error(&quot;Post request error in sampler &quot; + ctx.getCurrentSampler().getName(), ex);
}
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Файл отчета" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">GwtRpcJmeterResult.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Полный отчет" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">GwtRpcJmeterFullReport.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ru.intertrust.performance.jmetertools.GwtRpcStatVisualizer" testclass="ResultCollector" testname="Отчет по группам" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">GwtRpcJmeterGroupReport.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Список ошибок" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">GwtRpcJmeterErrorList.csv</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
