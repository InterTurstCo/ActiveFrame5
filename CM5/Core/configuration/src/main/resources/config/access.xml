<?xml version="1.0" encoding="UTF-8"?>
<configuration xmlns="https://cm5.intertrust.ru/config">

    <!-- Статические группы пользователей - мы вынуждены объявлять их здесь, 
        т.к. они используются в матрицах доступа -->
    <static-group name="Administrators" />

    <static-group name="Administrators_Read_Only" />

    <static-group name="Superusers" />

    <!-- Динамические группы пользователей - вычисляются системой -->
    <!-- Безконтекстные группы не поддерживаются. Это статичная группа заполняемая 
        точкой расширения на сохранение объектов -->
    <dynamic-group name="AllPersons">
        <members>
            <track-domain-objects type="Person" status="Active">
                <get-person>
                    <query>select id from person</query>
                </get-person>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="Person">
        <!-- По одной группе на каждый объект "Person" (пользователь) в системе -->
        <context>
            <domain-object type="Person" />
        </context>
        <members>
            <!-- Отслеживаем сохранение/удаление объектов типа "Person" в 
                статусе "active" и включаем их в соответствующую группу, т.е. где контекст 
                = объекту -->
            <track-domain-objects type="Person"
                status="Active">
                <get-person>
                    <doel>id</doel>
                </get-person>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="PersonAndDelegates">
        <!-- По одной группе на каждый объект "Person" (пользователь) в системе -->
        <context>
            <domain-object type="Employee" />
        </context>
        <members>
            <!-- Отслеживаем сохранение/удаление объектов типа "Delegation" 
                в статусе "active" -->
            <track-domain-objects type="Delegation">
                <!-- Указываем, какую именно группу (с каким контекстом) 
                    менять - берём пользователя из поля "person" -->
                <bind-context>
                    <doel>person</doel>
                </bind-context>
                <!-- Указываем, как получить пользователя, который войдёт 
                    в группу - берём его из поля "delegate" -->
                <get-person>
                    <doel>Delegation^person.delegate</doel>
                </get-person>
            </track-domain-objects>
            <track-domain-objects>
                <get-person>
                    <doel>id</doel>
                </get-person>
            </track-domain-objects>
        </members>
        <!-- Также включаем всех членов группы "Пользователь" с тем же контекстом -->
        <!-- include-group name="Пользователь" / -->
        <!-- Вероятно, по соображениям эффективности выгоднее будет не включать 
            здесь группу "Пользователь", а повторить тег trackObjects из неё -->
    </dynamic-group>

    <dynamic-group name="DepartmentEmployees">
        <context>
            <domain-object type="Department" />
        </context>
        <members>
            <track-domain-objects type="Employee">
                <bind-context>
                    <doel>Department</doel>
                </bind-context>
                <get-group name="PersonAndDelegates">
                    <doel>Employee^Department</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="AgentPersons">
        <context>
            <domain-object type="agent_person" />
        </context>
        <members>
            <track-domain-objects type="agent_person">
                <get-person>
                    <doel>person</doel>
                </get-person>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="OrganizationEmployees">
        <context>
            <domain-object type="Organization" />
        </context>
        <members>
            <track-domain-objects type="Employee">
                <bind-context>
                    <doel>Department.Organization</doel>
                </bind-context>
                <get-group name="DepartmentEmployees">
                    <!-- doel>Department^Organization.Employee^Department</doel -->
                    <!-- Врепенное решение пока не починится DOEL -->
                    <doel>Department^Organization</doel>
                </get-group>
            </track-domain-objects>
            <track-domain-objects type="Department">
                <bind-context>
                    <doel>Organization</doel>
                </bind-context>
                <get-group name="DepartmentEmployees">
                    <!-- doel>Department^Organization.Employee^Department</doel -->
                    <!-- Врепенное решение пока не починится DOEL -->
                    <doel>Department^Organization</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>


    <dynamic-group name="EmployeeDepartmentEmployees">
        <!-- По одной группе на каждый объект "Employee" (сотрудник) в системе -->
        <context>
            <domain-object type="Employee" />
        </context>
        <members>
            <track-domain-objects>
                <get-group name="DepartmentEmployees">
                    <doel>Department</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="OrganizationBoss">
        <context>
            <domain-object type="Organization" />
        </context>
        <members>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>Boss</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="DepartmentBosses">
        <context>
            <domain-object type="Organization" />
        </context>
        <members>
            <track-domain-objects type="Department">
                <bind-context>
                    <doel>Organization</doel>
                </bind-context>
                <get-group name="PersonAndDelegates">
                    <doel>Department^Organization.Boss</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="DepartmentBoss">
        <context>
            <domain-object type="Department" />
        </context>
        <members>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>Boss</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <!-- Контекстные роли -->
    <context-role name="DocumentAuthor">
        <context>
            <domain-object type="Outgoing_Document" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>Author</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>

    <context-role name="Author">
        <context>
            <domain-object type="Internal_Document" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>docAuthor</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>

    <context-role name="AuthorBosses">
        <context>
            <domain-object type="Internal_Document" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="DepartmentBosses">
                    <doel>docAuthor.Department.Organization</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>

    <context-role name="Registrator">
        <context>
            <domain-object type="Internal_Document" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>Registrant</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>

    <context-role name="Negotiator">
        <context>
            <domain-object type="Internal_Document" />
        </context>
        <groups>
            <track-domain-objects type="Negotiation_Card">
                <bind-context>
                    <doel>Parent_Document</doel>
                </bind-context>
                <get-group name="PersonAndDelegates">
                    <doel>Negotiation_Card^Parent_Document.Negotiator</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>
    
    <!-- <dynamic-group name="Редактор Стран">
        По одной группе на каждый объект "Person" (пользователь) в системе
        <context>
            <domain-object type="country" />
        </context>
        <members>
            Отслеживаем сохранение/удаление объектов типа "Person" в 
                статусе "active" и включаем их в соответствующую группу, т.е. где контекст 
                = объекту
            <track-domain-objects type="country"
                status="Active" />
        </members>
    </dynamic-group>

    <context-role name="Редактор Стран">
        <context>
            <domain-object type="country" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="Редактор Стран">
                    <doel>Author</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role> -->

    <!-- Матрицы доступа -->
    <access-matrix type="Outgoing_Document">
        <status name="Draft">
            <read>
                <permit-role name="DocumentAuthor" />
            </read>
            <write>
                <permit-role name="DocumentAuthor" />
            </write>
            <delete>
                <permit-role name="DocumentAuthor" />
            </delete>
            <create-child type="Employee">
                <permit-role name="DocumentAuthor" />
            </create-child>
            <execute-action name="action1">
                <permit-role name="DocumentAuthor" />
            </execute-action>
        </status>
    </access-matrix>
    
    <access-matrix type="letter">
        <status name="*">
            <read>
                <permit-group name="Administrators" />
                <permit-group name="Administrators_Read_Only" />
            </read>
            <write>
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-group name="Administrators" />
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" />
            </execute-action>
        </status>
    </access-matrix>
    
    <access-matrix type="country">
        <status name="Active">
            <read>
                <permit-group name="Administrators" />                 
                <permit-group name="Administrators_Read_Only" />
            </read>
            <write>
                <permit-group name="Administrators" /> 
            </write>
            <delete>
                <permit-group name="Administrators" /> 
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" /> 
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="Employee">
        <status name="Active">
            <read>
                <permit-group name="Administrators" />                 
                <permit-group name="Administrators_Read_Only" />
            </read>
            <write>
                <permit-group name="Administrators" /> 
            </write>
            <delete>
                <permit-group name="Administrators" /> 
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" /> 
            </execute-action>
        </status>
    </access-matrix>


    <access-matrix type="Department">
        <status name="Active">
            <read>
                <permit-group name="Administrators" />                 
                <permit-group name="Administrators_Read_Only" />
            </read>
            <write>
                <permit-group name="Administrators" /> 
            </write>
            <delete>
                <permit-group name="Administrators" /> 
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" /> 
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="Organization">
        <status name="Active">
            <read>
                <permit-group name="Administrators" />                 
                <permit-group name="Administrators_Read_Only" />
            </read>
            <write>
                <permit-group name="Administrators" /> 
            </write>
            <delete>
                <permit-group name="Administrators" /> 
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" /> 
            </execute-action>
        </status>
    </access-matrix>
    
    <access-matrix type="bu_nav_link_collection">
        <status name="Active">
            <read>
                <permit-group name="Administrators" />                 
                <permit-group name="Administrators_Read_Only" />
            </read>
            <write>
                <permit-group name="Administrators" /> 
            </write>
            <delete>
                <permit-group name="Administrators" /> 
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" /> 
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="country_union">
        <status name="Active">
            <read>
                <permit-group name="Administrators" />                
                <permit-group name="Administrators_Read_Only" />
            </read>
            <write>
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-group name="Administrators" />
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="city" read-everybody="true" >
        <!--status name="*">
            <read permit-everybody="true">
            </read>
        </status-->
        <status name="Active">
            <!--read>
                <permit-group name="AllPersons" />
            </read-->
            <write>
                <permit-group name="AllPersons" />
            </write>
            <delete>
                <permit-group name="AllPersons" />
            </delete>
            <execute-action name="action1">
                <permit-group name="AllPersons" />
            </execute-action>
        </status>
    </access-matrix>
    
    <!-- Внутренний документ -->
    <access-matrix type="Internal_Document">
        <status name="Draft">
            <read>
                <permit-role name="Author" />
                <permit-group name="Administrators" />                
            </read>
            <write>
                <permit-role name="Author" />
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-role name="Author" />
                <permit-group name="Administrators" />
            </delete>
            <execute-action name="StartProcessAction">
                <permit-role name="Author" />
            </execute-action>
            <execute-action name="ChangeStatusAction">
                <permit-role name="Author" />
            </execute-action>
        </status>
        <status name="Negotiation">
            <read>
                <permit-role name="Negotiator" />
            </read>
            <write>
                <permit-role name="Author" />
            </write>
        </status>
        <status name="Registration">
            <read>
                <permit-role name="Negotiator" />
                <permit-role name="Author" />
                <permit-role name="Registrator" />
            </read>
            <write>
                <permit-role name="Author" />
                <permit-role name="Registrator" />
            </write>
        </status>
        <status name="Registred">
            <read>
                <permit-group name="AllPersons" />
            </read>
            <delete>
                <permit-role name="Author" />
            </delete>
        </status>
        <status name="OnRevision">
            <write>
                <permit-role name="Author" />
            </write>
        </status>
    </access-matrix>   
    
    <!-- Карточка согласования. Наследует права у родительского документа -->
    <access-matrix type="Negotiation_Card" matrix-reference-field="Parent_Document"/>

</configuration>


