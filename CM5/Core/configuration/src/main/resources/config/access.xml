<?xml version="1.0" encoding="UTF-8"?>
<configuration xmlns="https://cm5.intertrust.ru/config">

    <!-- Статические группы пользователей - мы вынуждены объявлять их здесь, т.к. они используются в матрицах доступа -->
    <static-group name="Administrators" />

    <static-group name="Administrators_Read_Only" />

    <static-group name="Superusers" />

    <static-group name="test-group-1"/>

    <!-- Динамические группы пользователей - вычисляются системой -->
    <!-- Безконтекстные группы не поддерживаются. Это статичная группа заполняемая точкой расширения на сохранение объектов -->
    <dynamic-group name="AllPersons">
        <members>
            <track-domain-objects type="Person" status="Active">
                <get-person>
                    <query>select id from person</query>
                </get-person>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="Person">
        <!-- По одной группе на каждый объект "Person" (пользователь) в системе -->
        <context>
            <domain-object type="Person" />
        </context>
        <members>
            <!-- Отслеживаем сохранение/удаление объектов типа "Person" в статусе "active" и включаем их в соответствующую группу, т.е. где контекст
                = объекту -->
            <track-domain-objects type="Person" status="Active">
                <get-person>
                    <doel>id</doel>
                </get-person>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="PersonAndDelegates">
        <!-- По одной группе на каждый объект "Person" (пользователь) в системе -->
        <context>
            <domain-object type="Employee" />
        </context>
        <members>
            <!-- Отслеживаем сохранение/удаление объектов типа "Delegation" в статусе "active" -->
            <track-domain-objects type="Delegation">
                <!-- Указываем, какую именно группу (с каким контекстом) менять - берём пользователя из поля "person" -->
                <bind-context>
                    <doel>person</doel>
                </bind-context>
                <!-- Указываем, как получить пользователя, который войдёт в группу - берём его из поля "delegate" -->
                <get-person>
                    <doel>Delegation^person.delegate</doel>
                </get-person>
            </track-domain-objects>
            <track-domain-objects>
                <get-person>
                    <doel>id</doel>
                </get-person>
            </track-domain-objects>
        </members>
        <!-- Также включаем всех членов группы "Пользователь" с тем же контекстом -->
        <!-- include-group name="Пользователь" / -->
        <!-- Вероятно, по соображениям эффективности выгоднее будет не включать здесь группу "Пользователь", а повторить тег trackObjects из
            неё -->
    </dynamic-group>

    <dynamic-group name="DepartmentEmployees">
        <context>
            <domain-object type="Department" />
        </context>
        <members>
            <track-domain-objects type="Employee">
                <bind-context>
                    <doel>Department</doel>
                </bind-context>
                <get-group name="PersonAndDelegates">
                    <doel>Employee^Department</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="AgentPersons">
        <context>
            <domain-object type="agent_person" />
        </context>
        <members>
            <track-domain-objects type="agent_person">
                <get-person>
                    <doel>person</doel>
                </get-person>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="OrganizationEmployees">
        <context>
            <domain-object type="Organization" />
        </context>
        <members>
            <track-domain-objects type="Employee">
                <bind-context>
                    <doel>Department.Organization</doel>
                </bind-context>
                <get-group name="DepartmentEmployees">
                    <!-- doel>Department^Organization.Employee^Department</doel -->
                    <!-- Врепенное решение пока не починится DOEL -->
                    <doel>Department^Organization</doel>
                </get-group>
            </track-domain-objects>
            <track-domain-objects type="Department">
                <bind-context>
                    <doel>Organization</doel>
                </bind-context>
                <get-group name="DepartmentEmployees">
                    <!-- doel>Department^Organization.Employee^Department</doel -->
                    <!-- Врепенное решение пока не починится DOEL -->
                    <doel>Department^Organization</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>


    <dynamic-group name="EmployeeDepartmentEmployees">
        <!-- По одной группе на каждый объект "Employee" (сотрудник) в системе -->
        <context>
            <domain-object type="Employee" />
        </context>
        <members>
            <track-domain-objects>
                <get-group name="DepartmentEmployees">
                    <doel>Department</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="OrganizationBoss">
        <context>
            <domain-object type="Organization" />
        </context>
        <members>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>Boss</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="DepartmentBosses">
        <context>
            <domain-object type="Organization" />
        </context>
        <members>
            <track-domain-objects type="Department">
                <bind-context>
                    <doel>Organization</doel>
                </bind-context>
                <get-group name="PersonAndDelegates">
                    <doel>Department^Organization.Boss</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <dynamic-group name="DepartmentBoss">
        <context>
            <domain-object type="Department" />
        </context>
        <members>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>Boss</doel>
                </get-group>
            </track-domain-objects>
        </members>
    </dynamic-group>

    <!-- Контекстные роли -->
    <context-role name="DocumentAuthor">
        <context>
            <domain-object type="Outgoing_Document" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>Author</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>

    <context-role name="Author">
        <context>
            <domain-object type="Internal_Document" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>docAuthor</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>
    
    <context-role name="report_result_owner">
        <context>
            <domain-object type="report_result" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="Person">
                    <doel>owner</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>    

    <context-role name="AuthorBosses">
        <context>
            <domain-object type="Internal_Document" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="DepartmentBosses">
                    <doel>docAuthor.Department.Organization</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>

    <context-role name="Registrator">
        <context>
            <domain-object type="Internal_Document" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="PersonAndDelegates">
                    <doel>Registrant</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>

    <context-role name="Negotiator">
        <context>
            <domain-object type="Internal_Document" />
        </context>
        <groups>
            <track-domain-objects type="Negotiation_Card">
                <bind-context>
                    <doel>Parent_Document</doel>
                </bind-context>
                <get-group name="PersonAndDelegates">
                    <doel>Negotiation_Card^Parent_Document.Negotiator</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>

    <context-role name="task-addressee">
        <context>
            <domain-object type="Person_Task" />
        </context>
        <groups>
            <track-domain-objects type="Assignee_Person">
                <bind-context>
                    <doel>PersonTask</doel>
                </bind-context>
                <get-group name="Person">
                    <doel>Assignee_Person^PersonTask.Person</doel>
                </get-group>
            </track-domain-objects>
            <track-domain-objects type="Assignee_Group">
                <bind-context>
                    <doel>PersonTask</doel>
                </bind-context>
                <get-group>
                    <doel>Assignee_Group^PersonTask.UserGroup</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>
    
    <context-role name="notification-addressee">
        <context>
            <domain-object type="notification" />
        </context>
        <groups>
            <track-domain-objects type="notification">
                <get-group name="Person">
                    <doel>To</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>    

   <context-role name="authentification_info_owner">
        <context>
            <domain-object type="Authentication_Info" />
        </context>
        <groups>
            <collector class-name="ru.intertrust.cm.core.dao.impl.access.collector.AuthentificationInfoOwnerRoleCollector"/>
        </groups>
    </context-role>

   <context-role name="profile_owner">
        <context>
            <domain-object type="person_profile" />
        </context>
        <groups>
            <track-domain-objects>
                <get-group name="Person">
                    <doel>Person^profile</doel>
                </get-group>
            </track-domain-objects>
            <track-domain-objects type="Person">
                <bind-context>
                    <doel>profile</doel>
                </bind-context>
                <get-group name="Person">
                    <doel>Person^profile</doel>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>
    
   <context-role name="system_profile_value_reader">
        <context>
            <domain-object type="profile_value" />
        </context>
        <groups>
            <!-- Для системного профиля -->
            <track-domain-objects>
                <get-group>
                    <query>
                        select id from user_group where group_name = 'AllPersons'
                        and exists(select pv.id from profile_value pv
                        inner join system_profile sp on pv.profile = sp.id
                        where pv.id = {0})
                    </query>
                </get-group>
            </track-domain-objects>
        </groups>
    </context-role>

    <!-- <dynamic-group name="Редактор Стран"> По одной группе на каждый объект "Person" (пользователь) в системе <context> <domain-object type="country"
        /> </context> <members> Отслеживаем сохранение/удаление объектов типа "Person" в статусе "active" и включаем их в соответствующую группу, т.е.
        где контекст = объекту <track-domain-objects type="country" status="Active" /> </members> </dynamic-group> <context-role name="Редактор Стран">
        <context> <domain-object type="country" /> </context> <groups> <track-domain-objects> <get-group name="Редактор Стран"> <doel>Author</doel> </get-group>
        </track-domain-objects> </groups> </context-role> -->

    <!-- Матрицы доступа -->
    <access-matrix type="Outgoing_Document">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Draft">
            <read>
                <permit-role name="DocumentAuthor" />
            </read>
            <write>
                <permit-role name="DocumentAuthor" />
            </write>
            <delete>
                <permit-role name="DocumentAuthor" />
            </delete>
            <create-child type="Employee">
                <permit-role name="DocumentAuthor" />
            </create-child>
            <execute-action name="action1">
                <permit-role name="DocumentAuthor" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="Employee" read-everybody="true">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Active">

            <!-- На чтение есть права у родителя read-everybody
            <read>
                <permit-group name="Administrators" />
                <permit-group name="Administrators_Read_Only" />
            </read-->
            <write>
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-group name="Administrators" />
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" />
            </execute-action>
        </status>
    </access-matrix>


    <access-matrix type="Department" read-everybody="true">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Active">

            <write>
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-group name="Administrators" />
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="Organization">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Active">
            <read>
                <permit-group name="Administrators" />
                <permit-group name="Administrators_Read_Only" />
            </read>
            <write>
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-group name="Administrators" />
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="bu_user_settings">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Active">
            <read>
                <permit-group name="AllPersons" />
            </read>
            <write>
                <permit-group name="AllPersons" />
            </write>
            <delete>
                <permit-group name="AllPersons" />
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="bu_user_hip_settings">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Active">
            <read>
                <permit-group name="AllPersons" />
            </read>
            <write>
                <permit-group name="AllPersons" />
            </write>
            <delete>
                <permit-group name="AllPersons" />
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" />
            </execute-action>
        </status>
    </access-matrix>

    <access-matrix type="bu_nav_link_collection">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Active">
            <read>
                <permit-group name="AllPersons" />
            </read>
            <write>
                <permit-group name="AllPersons" />
            </write>
            <delete>
                <permit-group name="AllPersons" />
            </delete>
            <execute-action name="action1">
                <permit-group name="Administrators" />
            </execute-action>
        </status>
    </access-matrix>

    <!-- Внутренний документ -->
    <access-matrix type="Internal_Document">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="Draft">
            <read>
                <permit-role name="Author" />
                <permit-group name="Administrators" />
                <permit-role name="Registrator" />
            </read>
            <write>
                <permit-role name="Author" />
                <permit-group name="Administrators" />
            </write>
            <delete>
                <permit-role name="Author" />
                <permit-group name="Administrators" />
            </delete>
            <execute-action name="StartProcessAction">
                <permit-role name="Author" />
            </execute-action>
            <execute-action name="ChangeStatusAction">
                <permit-role name="Author" />
            </execute-action>
            <execute-action name="start-internal-document-process">
                <permit-role name="Author" />
            </execute-action>            
        </status>
        <status name="Negotiation">
            <read>
                <permit-role name="Author" />
                <permit-group name="Administrators" />
                <permit-role name="Registrator" />
                <permit-role name="Negotiator" />                
            </read>
            <write>
                <permit-role name="Author" />
            </write>
        </status>
        <status name="Registration">
            <read>
                <permit-role name="Author" />
                <permit-group name="Administrators" />
                <permit-role name="Registrator" />
            </read>
            <write>
                <permit-role name="Author" />
                <permit-role name="Registrator" />
            </write>
        </status>
        <status name="Registred">
            <read>
                <permit-group name="AllPersons" />
            </read>
            <delete>
                <permit-role name="Author" />
            </delete>
        </status>
        <status name="OnRevision">
            <read>
                <permit-role name="Author" />
                <permit-group name="Administrators" />
                <permit-role name="Registrator" />
            </read>
            <write>
                <permit-role name="Author" />
            </write>
        </status>
    </access-matrix>

    <!-- Карточка согласования. Наследует права у родительского документа -->
    <access-matrix type="Negotiation_Card" matrix-reference-field="Parent_Document" />

    <access-matrix type="Examine_Card" >
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="Resolution_Card" >
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="Status" read-everybody="true" >
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="Assignee_Person" read-everybody="true" >
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="Assignee_Group" read-everybody="true" >
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="Task_Attachment" read-everybody="true" >
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="Person" read-everybody="true" >
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="Person_Task">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <read>
                <permit-role name="task-addressee" />
            </read>
        </status>
    </access-matrix>

    <!-- Сделать корректную матрицу для уведомлений -->
    <access-matrix type="notification">
        <!-- Создавать записи может только система из соответствующего канала -->
        <!-- сreate>
            <permit-group name="AllPersons" />
        </create-->
            <status name="*">
                <read>
                    <permit-role name="notification-addressee"/>
                </read>
                <write>
                    <permit-role name="notification-addressee"/>
                </write>
                <delete>
                    <permit-role name="notification-addressee"/>
                </delete>
            </status>
    </access-matrix>

    <access-matrix type="Assignment">
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="Authentication_Info">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <read>
                <permit-role name="authentification_info_owner"/>
            </read>
            <write>
                <permit-role name="authentification_info_owner"/>
            </write>
        </status>
    </access-matrix>

    <access-matrix type="org_middle">
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="Tst_Employee">
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="Delegation">
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="report_template" read-everybody="true"/>

    <access-matrix type="report_template_attach" read-everybody="true"/>

    <access-matrix type="report_result">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <read>
                <permit-role name="report_result_owner" />
            </read>
        </status>
    </access-matrix>
    
    <access-matrix type="report_result_attachment" matrix-reference-field="report_result"/>    

    <access-matrix type="schedule">
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="locale" read-everybody="true">
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="notification_text" read-everybody="true">
        <create>
            <permit-group name="AllPersons" />
        </create>
    </access-matrix>

    <access-matrix type="system_profile">
        <status name="*">
            <read>
                <permit-group name="AllPersons"/>
            </read>
        </status>
    </access-matrix>

    <access-matrix type="person_profile">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <read>
                <permit-role name="profile_owner"/>
            </read>
            <write>
                <permit-role name="profile_owner"/>
            </write>
            <delete>
                <permit-role name="profile_owner"/>
            </delete>
            <create-child type="profile_value">
                <permit-role name="profile_owner"/>
            </create-child>
        </status>
    </access-matrix>

    <access-matrix type="profile_value" matrix-reference-field="profile"/>
    
    <access-matrix type="resources" read-everybody="true"/>
    
    <access-matrix type="blob_resources_attach" read-everybody="true"/>

    <access-matrix type="generate_report_queue" read-everybody="true">
        <create>
            <permit-group name="AllPersons" />
        </create>
        <status name="*">
            <write>
                <permit-group name="AllPersons"/>
            </write>
        </status>
    </access-matrix>
</configuration>


