<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<configuration xmlns="https://cm5.intertrust.ru/config">
    <collection name="Employees" idField="id">
        <prototype>
            <![CDATA[
                select
                    e.id, e.name, e.position
                from
                    Employee e
                     ::from-clause
                where
                    1=1 ::where-clause
            ]]>
        </prototype>

        <!-- если запрос-счётчик отсутствует, то в select подставляется count(*) 
            вместо названий колонок -->
        <counting-prototype>
            select count(*) from Employee e
            ::from-clause WHERE 1=1 ::where-clause
        </counting-prototype>

        <filter name="byDepartment">
            <!-- по умолчанию and, если перед условием нет других (только
                ключ. слово where), то условие опускаем -->
            <!-- {0} - это параметр фильтра, у одного фильтра может быть 
                несколько параметров -->
            <criteria placeholder="where-clause">
                <![CDATA[
                    e.department = {0}
                ]]>
            </criteria>
        </filter>

        <filter name="byDepartmentNames">
            <reference placeholder="from-clause">
                 <![CDATA[
                    inner join department d on e.department = d.id
                ]]>
            </reference>

            <!-- по умолчанию and, если перед условием нет других (только ключ. слово where), то условие опускаем -->
            <!-- {0} - это параметр фильтра, у одного фильтра может быть несколько параметров -->
            <criteria placeholder="where-clause">
                <![CDATA[
                    d.name in ({0})
                ]]>
            </criteria>
        </filter>
        
        <filter name="byName">
            <criteria placeholder="where-clause">
                <![CDATA[
                    e.name = {0}
                ]]>
            </criteria>
        </filter>
        <filter name="byFirstLetter">
            <criteria placeholder="where-clause">
                <![CDATA[
                    e.name like {0} || '%'
                ]]>
            </criteria>
        </filter>
        <filter name="byNameAndPosition">
            <criteria placeholder="where-clause">
                <![CDATA[
                    e.name || e.position like {0}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="Departments" idField="id">
        <prototype>
            <![CDATA[
                    select
                        d.id, d.name
                    from
                        Department d
                    where
                        1=1 ::where-clause
                ]]>
        </prototype>

        <counting-prototype>
            select count(*) from Department d
        </counting-prototype>
        <filter name="byOrganization">
            <criteria placeholder="where-clause">
                <![CDATA[
                    d.organization = {0}
                ]]>
            </criteria>
        </filter>
        <filter name="byName">
            <criteria placeholder="where-clause">
                <![CDATA[
                    d.name like {0}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection-view name="departments_default_view" collection="Departments" is-default="true">
        <display>
            <column field="id" name="id" type="integer" sortable="false"/>
            <column field="name" name="Название" editable="false" type="string" sortable="true"/>
        </display>
    </collection-view>

    <collection name="Organizations" idField="id">
        <prototype>
            <![CDATA[
                    select
                        o.id, o.name
                    from
                        Organization o
                         where
                    1=1 ::where-clause
                ]]>
        </prototype>
        <counting-prototype>
            select count(*) from Organization o
        </counting-prototype>
        <filter name="byName">
            <criteria placeholder="where-clause">
                <![CDATA[
                    o.name like {0}
                ]]>
            </criteria>
        </filter>
    </collection>
    <collection name="Cities" idField="id">
        <prototype>
            <![CDATA[
                select
                 ci.id,   ci.name, ci.population, ci.year_of_foundation, ci.latitude, ci.longitude, ci.square
                from
                    city ci
                     ::from-clause
                where
                    1=1 ::where-clause
            ]]>
        </prototype>
        <!-- если запрос-счётчик отсутствует, то в select подставляется count(*) вместо названий колонок -->
        <counting-prototype>
            select count(*) from city ci ::from-clause WHERE 1=1 ::where-clause
        </counting-prototype>

        <filter name="idsIncluded">
            <criteria placeholder="where-clause">
                <![CDATA[
                    ci.id in ({0})
                ]]>
            </criteria>
        </filter>
        <filter name="idsExcluded">
            <criteria placeholder="where-clause">
                <![CDATA[
                    ci.id not in ({0})
                ]]>
            </criteria>
        </filter>
        <filter name="byText">
            <criteria placeholder="where-clause">
                <![CDATA[
                    ci.name like {0}
                ]]>
            </criteria>
        </filter>

    </collection>
    <collection-view name="organizations_default_view" collection="Organizations" is-default="true">
        <display>
            <column field="id" name="id" type="integer" sortable="false"/>
            <column field="name" name="Название организации" editable="false" type="string" sortable="true"/>
        </display>
    </collection-view>

    <collection name="Employees_2" idField="id">
        <renderer
            className="ru.intertrust.cm.core.business.impl.EmployeesCollectionRenderer" />
        <filter name="byName" />
        <filter name="byDepartment" />
    </collection>

    <collection name="Outgoing_Document" idField="id">
        <!--todo поддержка конвертации значений, например, в картинки -->

        <prototype>
            <![CDATA[
                select
                    od.id, od.name, od.description, od.registration_date
                from
                    Outgoing_document od
                     ::from-clause
                where
                    1=1 ::where-clause
            ]]>
        </prototype>

        <!-- если запрос-счётчик отсутствует, то в select подставляется count(*) 
            вместо названий колонок -->
        <counting-prototype>
            select count(*) from Outgoing_document od
            ::from-clause WHERE 1=1 ::where-clause
        </counting-prototype>

    </collection>

    <collection name="Internal_Document" idField="id">
        <!--todo поддержка конвертации значений, например, в картинки -->
        <prototype>
            <![CDATA[
                select
                    i_doc.id, i_doc.name, i_doc.status, s.name as status_name
                from
                    Internal_Document i_doc 
                    inner join Status s on (i_doc.status = s.id)
                     ::from-clause
                where
                    1=1 ::where-clause
            ]]>
        </prototype>
        <!-- если запрос-счётчик отсутствует, то в select подставляется count(*) 
            вместо названий колонок -->
        <counting-prototype>
            select count(*) from Internal_Document i_doc
            ::from-clause WHERE 1=1 ::where-clause
        </counting-prototype>
    </collection>

    <collection name="Negotiation_Card" idField="id">
        <!--todo поддержка конвертации значений, например, в картинки -->

        <prototype>
            <![CDATA[
                select
                    nc.id, nc.name, nc.status, nc.parent_document, nc.add_negotiation_card, nc.state
                from
                    Negotiation_Card nc
                     ::from-clause
                where
                    1=1 ::where-clause
            ]]>
        </prototype>

        <!-- если запрос-счётчик отсутствует, то в select подставляется count(*) 
            вместо названий колонок -->
        <counting-prototype>
            select count(*) from Negotiation_Card nc
            ::from-clause WHERE 1=1 ::where-clause
        </counting-prototype>
        <filter name="byDoc">
            <criteria placeholder="where-clause">
                <![CDATA[
                    nc.parent_document = {0}
                ]]>
            </criteria>
        </filter>
        <filter name="byStatus">
            <reference placeholder="from-clause">
                 <![CDATA[
                    inner join status s on nc.status = s.id
                ]]>
            </reference>
            <criteria placeholder="where-clause">
                <![CDATA[
                    s.name = {0}
                ]]>
            </criteria>
        </filter>
        <filter name="byParentNecotiationCard">
            <criteria placeholder="where-clause">
                <![CDATA[
                    nc.add_negotiation_card = {0}
                ]]>
            </criteria>
        </filter>
        <filter name="onlyTopLevelCardByDoc">
            <criteria placeholder="where-clause">
                <![CDATA[
                    nc.parent_document = {0}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="Examine_Card" idField="id">
        <!--todo поддержка конвертации значений, например, в картинки -->

        <prototype>
            <![CDATA[
                select
                    ec.id, ec.name, ec.status,ec.parent_document,ec.state
                from
                    Examine_Card ec
                     ::from-clause
                where
                    1=1 ::where-clause
            ]]>
        </prototype>

        <!-- если запрос-счётчик отсутствует, то в select подставляется count(*) 
            вместо названий колонок -->
        <counting-prototype>
            select count(*) from Examine_Card ec
            ::from-clause WHERE 1=1 ::where-clause
        </counting-prototype>
        <filter name="byDoc">
            <criteria placeholder="where-clause">
                <![CDATA[
                    ec.parent_document = {0}
                ]]>
            </criteria>
        </filter>
        <filter name="byStatus">
            <reference placeholder="from-clause">
                 <![CDATA[
                    inner join status s on ec.status = s.id
                ]]>
            </reference>
            <criteria placeholder="where-clause">
                <![CDATA[
                    s.name = {0}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="Resolution_Card" idField="id">
        <!--todo поддержка конвертации значений, например, в картинки -->

        <prototype>
            <![CDATA[
                select
                    rc.id, rc.name, rc.status,rc.parent_document,rc.state
                from
                    Resolution_Card rc
                     ::from-clause
                where
                    1=1 ::where-clause
            ]]>
        </prototype>

        <!-- если запрос-счётчик отсутствует, то в select подставляется count(*) 
            вместо названий колонок -->
        <counting-prototype>
            select count(*) from Resolution_Card rc
            ::from-clause WHERE 1=1 ::where-clause
        </counting-prototype>
        <filter name="byDoc">
            <criteria placeholder="where-clause">
                <![CDATA[
                    rc.parent_document = {0}
                ]]>
            </criteria>
        </filter>
        <filter name="byStatus">
            <reference placeholder="from-clause">
                 <![CDATA[
                    inner join status s on rc.status = s.id
                ]]>
            </reference>
            <criteria placeholder="where-clause">
                <![CDATA[
                    s.name = {0}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="Assignment" idField="id">
        <!--todo поддержка конвертации значений, например, в картинки -->

        <prototype>
            <![CDATA[
                select
                    s.id, s.name, s.description, s.parent_document
                from
                    Assignment s
                     ::from-clause
                where
                    1=1 ::where-clause
            ]]>
        </prototype>

        <!-- если запрос-счётчик отсутствует, то в select подставляется count(*) 
            вместо названий колонок -->
        <counting-prototype>
            select count(*) from Assignment s
            ::from-clause WHERE 1=1 ::where-clause
        </counting-prototype>
        <filter name="byDoc">
            <criteria placeholder="where-clause">
                <![CDATA[
                    s.parent_document = {0}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="Outgoing_Document" idField="id">
        <!--todo поддержка конвертации значений, например, в картинки -->

        <prototype>
            <![CDATA[
                select
                    od.id, od.name, od.description, od.registration_date
                from
                    outgoing_document od
                     ::from-clause
                where
                    1=1 ::where-clause
            ]]>
        </prototype>

        <!-- если запрос-счётчик отсутствует, то в select подставляется count(*) 
            вместо названий колонок -->
        <counting-prototype>
            select count(*) from outgoing_document od
            ::from-clause WHERE 1=1
            ::where-clause
        </counting-prototype>

    </collection>

    <collection name="GroupByName" idField="id">

        <prototype>
            <![CDATA[
                select
                    s.id
                from
                    User_Group s
                     ::from-clause
                where
                    1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byName">
            <criteria placeholder="where-clause">
                <![CDATA[
                    s.group_name = {0}
                ]]>
            </criteria>
        </filter>
    </collection>


    <collection name="PersonInGroup" idField="id">

        <prototype>
            <![CDATA[
                select p.id
                from Person p
                inner join group_member gm on (gm.person_id = p.id)
                where 1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byGroup">
            <criteria placeholder="where-clause">
                <![CDATA[
                    gm.usergroup = {0}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="AllPersonInGroup" idField="id">

        <prototype>
            <![CDATA[
                select p.id
                from Person p
                inner join group_member gm on (gm.person_id = p.id)
                inner join group_group gg on (gg.child_group_id = gm.usergroup)
                where 1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byGroup">
            <criteria placeholder="where-clause">
                <![CDATA[
                    gg.parent_group_id = {0}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="IsPersonInGroup" idField="id">

        <prototype>
            <![CDATA[
                select gg.id
                from group_group gg
                inner join group_member gm on (gg.child_group_id = gm.usergroup)
                where 1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byGroupAndPerson">
            <criteria placeholder="where-clause">
                <![CDATA[
                    gg.parent_group_id = {0} and gm.person_id = {1}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="PersonGroups" idField="id">

        <prototype>
            <![CDATA[
                select ug.id
                from User_Group ug
                inner join group_group gg on (gg.parent_group_id = ug.id)
                inner join group_member gm on (gg.child_group_id = gm.usergroup)
                where 1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byPerson">
            <criteria placeholder="where-clause">
                <![CDATA[
                    gm.person_id  = {0}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="PersonTask" idField="id">

        <prototype>
            <![CDATA[
                select
                    t.id
                from
                    Person_Task t 
                    inner join Assignee_Person ap on (t.id = ap.persontask)
                    inner join Status s on (t.status = s.id)
                     ::from-clause
                where
                    s.name in ('Send', 'Acquired') ::where-clause
            ]]>
        </prototype>

        <filter name="byPerson">
            <criteria placeholder="where-clause">
                <![CDATA[
                    ap.person  = {0}
                ]]>
            </criteria>
        </filter>
        <filter name="byAttachment">
            <criteria placeholder="where-clause">
                <![CDATA[
                    t.mainattachment  = {0}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="NotCompleteTask" idField="id">

        <prototype>
            <![CDATA[
                select
                    t.id
                from
                    Person_Task t
                    inner join Status s on (t.status = s.id)
                     
                     ::from-clause
                where
                    s.name in ('Send', 'Acquired') ::where-clause
            ]]>
        </prototype>

        <filter name="byExecutionIdAndTaskId">
            <criteria placeholder="where-clause">
                <![CDATA[
                    t.executionid = {0} and t.activityid = {1} 
                ]]>
            </criteria>
        </filter>
    </collection>


    <collection name="PersonGroupTask" idField="id">

        <prototype>
            <![CDATA[
                select
                    t.id
                from
                    Person_Task t
                    inner join assignee_group ag on (t.id = ag.persontask)
                    inner join group_member gm on (ag.usergroup = gm.usergroup)
                    inner join Status s on (t.status = s.id)
                     ::from-clause
                where
                     s.name in ('Send', 'Acquired')  ::where-clause
            ]]>
        </prototype>

        <filter name="byPerson">
            <criteria placeholder="where-clause">
                <![CDATA[
                    gm.person_id  = {0}
                ]]>
            </criteria>
        </filter>
        <filter name="byAttachment">
            <criteria placeholder="where-clause">
                <![CDATA[
                    t.mainattachment  = {0}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="GroupInGroup" idField="id">

        <prototype>
            <![CDATA[
                select
                    gs.id
                from
                    group_group_settings gs
                     ::from-clause
                where
                     1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byMembers">
            <criteria placeholder="where-clause">
                <![CDATA[
                    gs.parent_group_id = {0} and gs.child_group_id = {1}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="AllGroupInGroup" idField="id">

        <prototype>
            <![CDATA[
                select
                    gs.id
                from
                    group_group gs
                     ::from-clause
                where
                     1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byMembers">
            <criteria placeholder="where-clause">
                <![CDATA[
                    gs.parent_group_id = {0} and gs.child_group_id = {1}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="AllParentGroups" idField="id">

        <prototype>
            <![CDATA[
                select
                    g.id
                from
                    User_Group g
                    inner join group_group gs on (g.id = gs.parent_group_id)
                     ::from-clause
                where
                     1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byChild">
            <criteria placeholder="where-clause">
                <![CDATA[
                    gs.child_group_id = {0}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="ChildGroups" idField="id">

        <prototype>
            <![CDATA[
                select
                    g.id
                from
                    User_Group g
                    inner join group_group_settings gs on (g.id = gs.child_group_id)
                     ::from-clause
                where
                     1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byParent">
            <criteria placeholder="where-clause">
                <![CDATA[
                    gs.parent_group_id = {0}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="AllChildGroups" idField="id">

        <prototype>
            <![CDATA[
                select
                    g.id
                from
                    User_Group g
                    inner join group_group gs on (g.id = gs.child_group_id)
                     ::from-clause
                where
                     1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byParent">
            <criteria placeholder="where-clause">
                <![CDATA[
                    gs.parent_group_id = {0}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="GroupGroup" idField="id">

        <prototype>
            <![CDATA[
                select
                    g.id
                from
                    group_group g
                     ::from-clause
                where
                     1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byMember">
            <criteria placeholder="where-clause">
                <![CDATA[
                    g.parent_group_id = {0} and g.child_group_id = {1}
                ]]>
            </criteria>
        </filter>
    </collection>


    <collection name="GroupGroupSettings" idField="id">

        <prototype>
            <![CDATA[
                select
                    g.id
                from
                    group_group_settings g
                     ::from-clause
                where
                     1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byMember">
            <criteria placeholder="where-clause">
                <![CDATA[
                    g.parent_group_id = {0} and g.child_group_id = {1}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="PersonGroup" idField="id">

        <prototype>
            <![CDATA[
                select
                    g.id
                from
                    Group_Member g
                     ::from-clause
                where
                     1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byMember">
            <criteria placeholder="where-clause">
                <![CDATA[
                    g.usergroup = {0} and g.person_id = {1}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="NotificationText" idField="id">

        <prototype>
            <![CDATA[
                select
                    nt.id,
                    nt.notification_part,
                    nt.notification_text
                from
                    notification_text nt
                     ::from-clause
                where
                     1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byParams">
            <criteria placeholder="where-clause">
                <![CDATA[
                    nt.notification_type = {0}
                    and nt.channel = {1}
                    and nt.locale = {2}
                ]]>
            </criteria>
        </filter>
    </collection>

    <collection name="ProfileValues" idField="id">

        <prototype>
            <![CDATA[
                select
                    pv.id
                from
                    profile_value pv
                    ::from-clause
                where
                     1=1 ::where-clause
            ]]>
        </prototype>

        <filter name="byName">
            <reference placeholder="from-clause">
                <![CDATA[
                    inner join system_profile sp on pv.profile=sp.id
                ]]>
            </reference>
            <criteria placeholder="where-clause">
                <![CDATA[
                    sp.name = {0}
                ]]>
            </criteria>
        </filter>
        <filter name="byPersonId">
            <reference placeholder="from-clause">
                <![CDATA[
                    inner join person_profile pp on pv.profile=pp.id
                    inner join person p on p.profile=pp.id
                ]]>
            </reference>
            <criteria placeholder="where-clause">
                <![CDATA[
                    p.id = {0}
                ]]>
            </criteria>
        </filter>
        <filter name="byId">
            <criteria placeholder="where-clause">
                <![CDATA[
                    pv.profile = {0}
                ]]>
            </criteria>
        </filter>

    </collection>


</configuration>
