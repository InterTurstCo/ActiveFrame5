1.	Резюме совещаний
1.1.	16/17.04.2013

1.	Вопросы 1, 2, 3 (АРМы CM4).
o	CM4 клиент. Необходима какая-то демонстрация его работы. В целом, категорических противоречий с идеей будущего прототипа не выявлено. Будет добавлен слой, делегирующий REST-запросы на API системы и трансформирующий ответы в нужный формат.
o	Для административных целей будет разрабатываться отдельный интерфейс пользователя, который может выступать, в том числе, и в качестве альтернативы CM4-клиента для АРМов.
2.	Вопросы 5, 6 (Формы)
o	Механизм конфигурируемых форм будет использован в «административном интерфейсе» по усмотрению архитекторов. То есть будет :)
3.	Вопросы 9, 10. ACL и права доступа. Необходим бизнес-аналитик, хорошо разбирающийся в различных сценариях, связанных с проблемой. Например, требования подобные "В случае смены заместителя руководителя отдела, права доступа должны быть пересчитаны в течение 5 секунд" должны быть озвучены. Требуется повторный тщательный анализ проблемы и максимально эффективная реализация.
Пометка «от себя», которую я еще не высказывал. Кажется, у нас, все-таки, не используется запись в ACL на каждый объект на каждого пользователя. А используется  1 запись на роль на ТИП объекта. И только если на конкретный документ, на который прав нет по умолчанию, даются права, тогда добавляется такая запись.
4.	Вопрос 15. Движок Workflow. Склоняемся к использованию Activiti, при этом подход, как сделать это наиболее корректно с точки зрения самой Activiti, должен быть тщательно продуман. Теоретически возможен вариант использования некого внутреннего движка Workflow. Требуется дополнительное обсуждение.
Жизнеспособность архитектуры требуется «доказать» на примере Внутренних документов. «Доказательство» заключается, в том числе, и диаграммами, описывающими архитектуру решений, связанных с Workflow и проверкой прав. 
5.	Application Server - JBoss 7 (кстати, уже вышел JBoss 6 с той же функциональностью, утилитами для настройки и корпоративной поддержкой). Сама платформа кросс-серверная. В дальнейшем планируется равертывание под IBM WebSphere и другими серверами.
6.	СУБД. Основной ориентир - Oracle с оглядкой на Postgres. Архитектура, в любом случае, будет нацелена на поддержку произвольной СУБД. На мой взгляд разработчикам стоит работать под Postgres, по крайней мере, до появления полноценного прототипа. Таким образом, мы сэкономим некоторое время, затрачиваемое на поддержку баз, затрачиваемое разработчиками. Платформенно-зависимые вещи (процедуры, триггеры, прочее) будут использоваться в самых крайних случаях, а различие в "чистом" SQL минимально в современных СУБД, поэтому вариант кажется достаточно безопасным. Кроме сэкономленного времени на первоначальном, критичном, этапе разработки доводов нет.
7.	Из системы версионности дружно одобрен GIT.
8.	Система сборки - Maven
9.	Полнотекстовый поиск и Solr. Требуется тщательно продумать алгоритм взаимодействия с сервисом. Например, логично сначала производить выборку из Solr, а затем фильтровать по правам, а не наоборот из-за существования такой сортировки как «по релевантности».
